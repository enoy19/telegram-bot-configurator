title=Telegram Bot Configurator
configuration=Konfiguration
users=Benutzer
permissions=Berechtigungen
roles=Rollen
commands=Kommandos
activated=Aktiviert
id=ID
name=Name
key=Schlüssel
value=Wert
user.properties=Benutzer Eigenschaften
parent=Elternteil
clear=löschen
delete=löschen
run=Starten
ok=Ok

command.textfield.tooltip=Name des Kommandos ohne Slash (keine Leer- und Sonderzeichen)
command=Kommando
description=Beschreibung
definitions=Definitionen
position=Position
definition=Definition
available.arguments=Verfügbare Argumente
argument=Argument
argument.value.mapping=Argument Werte Tabelle
arguments=Argumente
script.bindings=// Skript Variablen\:\n// - config \: Config\n// - commands \: List<Command>\n// - permissions \: List<Permission>\n// - roles \: List<Role>\n// - users \: List<User>\n// - ui \: TaskControlAdapter\n// - command \: Command\n// - userInputs \: UserInput[]\n// - user \: User\n// - arguments \: Argument[]\n// - msg \: MessageSender\n// - cmd \: CommandLineUtils\n// - chatId \: long\n// ## FUNKTIONEN ## \n// - log( Object ):void\n// - sleep( long ):void\n// - getSaveFile():java.io.File\n// - applySaveFile( java.io.File ):boolean\n
script=Skript
allowed.arguments=Erlaubte Argumente
defined.arguments=Definierte Argumente
opened=Datei geöffnet
opened.error=Datei öffnen fehlgeschlagen
saved=Datei gespeichert
saved.error=Datei speichern fehlgeschlagen

aborted=Abgebrochen
usage=Benutzung
activated.not=Sie sind nicht aktiviert
permissions.insufficient=Sie haben unzureichende Berechtigungen
command.allowed.not=Sie haben nicht genügend Berechtigungen dieses Kommando zu benutzen
command.found.not=Kommando konnte nicht gefunden werden
argument.invalid=Ungültiges Argument
idle.too.long=Zu lange inaktiv.\nLetzte interaktionen werden gelöscht.

allowed.arguments.tooltip=Erlaubte Argumente\nWenn die Liste leer ist, wird jedes Argument erlaubt.

clear.task.history=Aufgaben leeren
clear.task.history.auto=Aufgaben automatisch leeren

new=Neu
open=Öffnen...
save=Speichern...
save.as=Speichern unter...
file=Datei
about=Über
help=Hilfe

run.bot=Bot starten
bot.token=Bot Token
time.started=Gestartet
time.stopped=Gestoppt
time.run=Laufzeit
amount.commands=Anzahl ausgeführter Kommandos

telegram.bot.configurator.file=Telegram Bot Konfigurations Datei

io.enoy.tbc.application.model.Configuration.botToken.name=Bot Token
io.enoy.tbc.application.model.Configuration.botToken.description=Bot Token, der beim Erstellen eines Bots vom Botfather mitgeteilt wird.
io.enoy.tbc.application.model.Configuration.addUserToListOnContact.name=Benutzer automatisch einpflegen
io.enoy.tbc.application.model.Configuration.addUserToListOnContact.description=Benutzer, die nicht in der Benutzerliste existieren, werden beim ersten Kontakt eingepflegt.
io.enoy.tbc.application.model.Configuration.addUserToListOnContactActivated.name=Automatische Benutzer aktiviert
io.enoy.tbc.application.model.Configuration.addUserToListOnContactActivated.description=Automatisch eingepflegte Benutzer werden direkt aktiviert oder deaktiviert.
io.enoy.tbc.application.model.Configuration.autoSave.name=Automatisch speichern
io.enoy.tbc.application.model.Configuration.autoSave.description=In der Laufzeit werden Änderungen in einem Intervall automatisch gespeichert
io.enoy.tbc.application.model.Configuration.addUserToListOnContactDefaultGroup.name=Standard Gruppe
io.enoy.tbc.application.model.Configuration.addUserToListOnContactDefaultGroup.description=Die standard Gruppe der automatisch eingepflegten Benutzer
io.enoy.tbc.application.model.Configuration.externalCommandCall.name=Externer Kommando aufruf
io.enoy.tbc.application.model.Configuration.externalCommandCall.description=Beim starten wird ein Ordner erstellt, in dem man [Benutzer-ID].txt Dateien erstellt.\nWährend der Bot läuft, wird die Datei überprüft und jedes\neinzeiler Kommando wird mit den Berechtigungen Des Benutzers ausgeführt.
io.enoy.tbc.application.model.Configuration.collectLastArguments.name=Letzte Argumente Sammeln
io.enoy.tbc.application.model.Configuration.collectLastArguments.description=Wenn die Argumentanzahl die definierten Argumente überschreitet, werden diese ins letzte Argument zusammengefasst.\nBeispiel: Commando "test" hat 1 Argument. Der Einzeiler "/test 1 2 3" bewirkt dass "1 2 3" in einem Argument zusammengefasst sind anstatt wie üblich in 3.
